// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Framework.Common.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CommonDbContext))]
    [Migration("20210530074229_Common_InitialDbCreation")]
    partial class Common_InitialDbCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Framework.Core.CommonTables.Entities.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSecure")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSticky")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemSetting", "Common");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "MockDate",
                            Value = "true",
                            ValueType = "bool"
                        },
                        new
                        {
                            Id = 200,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "CurrentDate",
                            Value = "5/29/2021 12:00:00 AM",
                            ValueType = "DateTime"
                        },
                        new
                        {
                            Id = 300,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "MockUser",
                            Value = "true",
                            ValueType = "bool"
                        },
                        new
                        {
                            Id = 400,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "MockDataBase",
                            Value = "false",
                            ValueType = "bool"
                        },
                        new
                        {
                            Id = 500,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "ExternalUrl",
                            Value = "false",
                            ValueType = "string"
                        },
                        new
                        {
                            Id = 600,
                            CreatedOn = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "",
                            IsActive = true,
                            IsDeleted = false,
                            IsSecure = false,
                            IsSticky = false,
                            Name = "InternalUrl",
                            Value = "false",
                            ValueType = "string"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
